Caroline Oberg
12/4/2020
Quantative Reasoning Reflection

1. Describe how you used multiple quantitative methods, techniques and algorithms
to add functionality to your program. How did you decided what method to use?
For example, how did you use lists? “If” statements? Loops? Classes? Functions?
Sample pieces of code? How did you decide which methods to apply?
Feel free to give examples

I decided to do a text adventure game for my program. To do this I followed the
layout of Lab 6, which was also a text adventure lab. To make a successful text
adventure game you need to set up a class for the rooms as well as one for items.
Then you have to write a main function with the rooms and items, followed by
several different loops so the game goes through each direction, which is then
followed by if anf elif statements so the user can get items and use them, and
then to finish it off you have to call the main function. It was hard for me to
decide which methods to apply but I relied on my previous lab and the help of
the professor to make my decision.

2. Explain how you communicate your solution (from one programmer to another)
when writing the code. Show how variable names matter, how function names matter,
how comments and structure make your code easier to read.

I find it very difficult to communicate my solution to a problem when writing the
code. I am always very unsure if my code is right or not, but when I do have to
communicate my solution I usually have to find why I think something goes a
certain way in the book. One way to make your code easier to read is to make sure
that you have enough lines in between your different functions. It gives your
code plenty of separation making it easier to read and it looks nicer as well.
Another way of making your code look nicer is adding comments to your code.
This not only makes it easier for other people to read your code, but it can help
you to not get lost in your own code. It is super important to make sure your
variable names are in all lower case, it is easy to mess up spelling and the
capitalization within your code without you noticing.

3. How did you test and evaluate the accuracy of your code? When something
didn’t work, describe how you debugged what the error was. Also, how do you
determine if data returned is correct data?

The easiest way to test and evaluate the accuracy of your code is to run the code.
You will find out very quickly whether or not your code passed the test. Another
way to test your code is to have either a professor or peer look over it to see
if they find something you might have other wised missed. Whenever my code didn't
work I had to make sure to make an appointment in office hours and then usually
within a couple of seconds of looking at my code the professor was able to help
me debug. When data is returned, one way to make sure it is correct data is to
check the assignment description for what you should be seeing. If you have a
visual with your returned data it is very easy to see whether the data returned
is correct, like if you were using code to draw a picture of a flower and all
you see is one circle your returned data is not the correct data.

4. What are the limitations to using numerical methods to make decisions?
For example, why can’t we just replace humans with algorithms?
Why can’t we just evaluate students based solely on test scores?
Why can’t we evaluate teachers just on how their students do?
What is the limitation to evaluating athletes just on their stats?

When decisions are made solely based off of numerical methods, we are no longer
taking ethics and humanity into consideration. We can't simply replace humans
with algorithms because an algorithm is essentially a definite set of rules a
computer goes by to make decisions, and we can't always make decisions based
off of one set of rules. For instance we can't just evaluate students based
solely on test scores for a multitude of reasons including the fact that
standardized tests are ableist, students are most likely better in one area
than another, and not all students learn the same material or at the same pace.
There are other more humanitarian reasons we can't evaluate students based solely
on their test scores, like students with higher income parents are more likely
to do better academically than their lower income counterparts. We can't
evaluate teachers just on how their students do because there are other factors
that should go into their evaluations, like did they cover the necessary
material, or if they made their class a worhtwhile experience for students.
We can see in the chaos of the current pandemic how only using numerical methods
would be terrible- the percentage of people that die probably wouldn't be high
enough for a computer to say everything needs to be shut down, there wouldn't
be any exceptions or breaks for students struggling to focus or with their
physical or mental health.


